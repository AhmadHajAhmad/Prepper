{
	"info": {
		"_postman_id": "2b058d4f-cf5c-4416-b49a-2130c7cf9b6d",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29663010"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Post User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"userID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"username\");",
									"    pm.expect(jsonData).to.have.property(\"password\");",
									"    pm.expect(jsonData).to.have.property(\"email\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Test User\",\n    \"password\": \"testPassword\",\n    \"email\": \"test@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.token;",
									"pm.environment.set(\"loginToken\", value);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"something updated\",\n    \"password\": \"updatedPassword\",\n    \"email\": \"updated@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Food",
			"item": [
				{
					"name": "Log In baseCase Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.token;",
									"pm.environment.set(\"loginToken\", value);",
									"",
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.userid;",
									"pm.environment.set(\"userID\", value);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"foodID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"foodname\");",
									"    pm.expect(jsonData).to.have.property(\"calories\");",
									"    pm.expect(jsonData).to.have.property(\"weight\");",
									"    pm.expect(jsonData).to.have.property(\"_userid\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Test Food1\",\n    \"calories\": 999,\n    \"weight\": 500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the enteties retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const expectedId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(expectedId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /food/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/food/{{foodID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"food",
								"{{foodID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/ food/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Updated food\",\n    \"calories\": 999,\n    \"weight\": 999\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/food/{{foodID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"food",
								"{{foodID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /food/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/food/{{foodID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"food",
								"{{foodID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Person",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.token;",
									"pm.environment.set(\"loginToken\", value);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"personID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"name\");",
									"    pm.expect(jsonData).to.have.property(\"age\");",
									"    pm.expect(jsonData).to.have.property(\"weight\");",
									"    pm.expect(jsonData).to.have.property(\"sex\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "autherization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Shakhdfghfgyuf123\",\n    \"age\": 45,\n    \"weight\": 80,\n    \"sex\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/persons",
							"host": [
								"{{host}}"
							],
							"path": [
								"persons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All People",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/persons",
							"host": [
								"{{host}}"
							],
							"path": [
								"persons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Person by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/persons/{{personID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"persons",
								"{{personID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Shakira updated\",\n    \"age\": 30,\n    \"weight\": 80,\n    \"sex\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/persons/{{personID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"persons",
								"{{personID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/persons/{{personID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"persons",
								"{{personID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Water",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.token;",
									"pm.environment.set(\"loginToken\", value);",
									"",
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.userid;",
									"pm.environment.set(\"userID\", value);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /water",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"waterID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"waterqty\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"waterqty\": 400\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/water/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"water",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /water",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/water/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"water",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /water/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/water/{{waterID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"water",
								"{{waterID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /water/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"waterqty\": 999\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/water/{{waterID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"water",
								"{{waterID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /water/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/water/{{waterID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"water",
								"{{waterID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supplies",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.token;",
									"pm.environment.set(\"loginToken\", value);",
									"",
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData.userid;",
									"pm.environment.set(\"userID\", value);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /supplies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"supplyID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"itemname\");",
									"    pm.expect(jsonData).to.have.property(\"instock\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"itemname\": \"Test Item\",\n    \"instock\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/supplies",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"supplies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /supplies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/supplies",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"supplies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /supplies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/supplies/{{supplyID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"supplies",
								"{{supplyID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /supplies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"itemname\": \"Updated Item\",\n    \"instock\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/supplies/{{supplyID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"supplies",
								"{{supplyID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /supplies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profile/{{userID}}/supplies/{{supplyID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profile",
								"{{userID}}",
								"supplies",
								"{{supplyID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET /api",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api",
					"host": [
						"{{host}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}