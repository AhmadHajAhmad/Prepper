{
	"info": {
		"_postman_id": "455fc33b-ca48-41a3-9ba3-96c61a618e6f",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29427724"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Post User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"createduserID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"username\");",
									"    pm.expect(jsonData).to.have.property(\"password\");",
									"    pm.expect(jsonData).to.have.property(\"email\");",
									"    pm.expect(jsonData).to.have.property(\"isAdmin\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Test User\",\n    \"password\": \"testPassword\",\n    \"email\": \"test@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profiles",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profiles/{{createduserID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{createduserID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"something updated\",\n    \"password\": \"updatedPassword\",\n    \"email\": \"updated@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{createduserID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{createduserID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profiles/{{createduserID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{createduserID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Food",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"foodID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"foodname\");",
									"    pm.expect(jsonData).to.have.property(\"calories\");",
									"    pm.expect(jsonData).to.have.property(\"weight\");",
									"    pm.expect(jsonData).to.have.property(\"_userid\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Test Food1\",\n    \"calories\": 999,\n    \"weight\": 500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the enteties retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const expectedId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(expectedId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /food/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{foodID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{foodID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/ food/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Updated food\",\n    \"calories\": 999,\n    \"weight\": 999\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{foodID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{foodID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /food/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{foodID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{foodID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Person",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/ Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"personID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"name\");",
									"    pm.expect(jsonData).to.have.property(\"age\");",
									"    pm.expect(jsonData).to.have.property(\"weight\");",
									"    pm.expect(jsonData).to.have.property(\"height\");",
									"    pm.expect(jsonData).to.have.property(\"sex\");",
									"    pm.expect(jsonData).to.have.property(\"_userid\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"hij\",\n    \"age\": 60,\n    \"weight\": 80,\n    \"height\": 170,\n    \"sex\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/ people",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the enteties retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const expectedId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(expectedId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/ person/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Asserting that the enteties retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const expectedId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(expectedId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{personID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{personID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/ person/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Shakira updated\",\n    \"age\": 30,\n    \"weight\": 80,\n    \"height\": 189,\n    \"sex\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{personID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{personID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/ person/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{personID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{personID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Water",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /water",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"waterID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"waterqty\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"waterqty\": 400\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/water/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"water",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /water",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/water/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"water",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /water/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/water/{{waterID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"water",
								"{{waterID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /water/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"waterqty\": 999\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/water/{{waterID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"water",
								"{{waterID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /water/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/water/{{waterID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"water",
								"{{waterID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supplies",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /supplies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"supplyID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"itemname\");",
									"    pm.expect(jsonData).to.have.property(\"instock\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"itemname\": \"Test Item\",\n    \"instock\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/supplies",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"supplies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /supplies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/supplies",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"supplies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /supplies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/supplies/{{supplyID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"supplies",
								"{{supplyID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /supplies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"itemname\": \"Updated Item\",\n    \"instock\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/supplies/{{supplyID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"supplies",
								"{{supplyID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /supplies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/supplies/{{supplyID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"supplies",
								"{{supplyID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HTTP Override",
			"item": [
				{
					"name": "POST /house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"householdID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"streetname\");",
									"    pm.expect(jsonData).to.have.property(\"zipcode\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streetname\": \"Override Street\",\n    \"zipcode\": 122345\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get /user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"bodyData = JSON.parse(responseBody);",
									"street = bodyData.streetname;",
									"zip = bodyData.zipcode;",
									"pm.environment.set(\"initialStreet\", street);",
									"pm.environment.set(\"initialZip\", zip);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{householdID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{householdID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /house/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Custom-Action",
								"value": "PATCH",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streetname\": \"Patch Street\",\n    \"zipcode\": 56789\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{householdID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{householdID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get /user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"bodyData = JSON.parse(responseBody);",
									"updatedStreet = bodyData.streetname;",
									"updatedZip = bodyData.zipcode;",
									"",
									"initialStreet = pm.environment.get(\"initialStreet\");",
									"initialZip = pm.environment.get(\"initialZip\");",
									"",
									"pm.test(\"Street name has been updated\", function () {",
									"    pm.expect(updatedStreet).to.not.eql(initialStreet);",
									"});",
									"",
									"pm.test(\"Zipcode has been updated\", function () {",
									"    pm.expect(updatedZip).to.not.eql(initialZip);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{householdID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{householdID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /house/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Custom-Action",
								"value": "DELETE",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streetname\": \"THIS METHOD IS IN FACT PATCHING INSTEAD OF DELETING LIKE A GOOD BOY\",\n    \"zipcode\": 1234556\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{householdID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{householdID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get /user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{householdID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{householdID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Calories",
			"item": [
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /person1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalPers1\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kcal Test1\",\n    \"age\": 35,\n    \"weight\": 67,\n    \"height\": 170,\n    \"sex\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /person2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalPers2\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kcal Test 2\",\n    \"age\": 55,\n    \"weight\": 80,\n    \"height\": 190,\n    \"sex\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /food1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalFood1\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Kcal Food1\",\n    \"calories\": 600,\n    \"weight\": 500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /food2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalFood2\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Kcal Food2\",\n    \"calories\": 350,\n    \"weight\": 1500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /days",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/calories/days",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"calories",
								"days"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /stored",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/calories/stored",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"calories",
								"stored"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /needs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/calories/needs",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"calories",
								"needs"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/ person1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{kcalPers1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{kcalPers1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/ person2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{kcalPers2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{kcalPers2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /food1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{kcalFood1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{kcalFood1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /food2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{kcalFood2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{kcalFood2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Post User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"createduserID\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"username\");",
									"    pm.expect(jsonData).to.have.property(\"password\");",
									"    pm.expect(jsonData).to.have.property(\"email\");",
									"    pm.expect(jsonData).to.have.property(\"isAdmin\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"TestUser\",\n    \"password\": \"TestPassword\",\n    \"email\": \"test@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /person1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalPers1\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"person Test1\",\n    \"age\": 35,\n    \"weight\": 67,\n    \"height\": 170,\n    \"sex\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /person2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalPers2\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"person Test 2\",\n    \"age\": 55,\n    \"weight\": 80,\n    \"height\": 190,\n    \"sex\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /food1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalFood1\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Kcal Food1\",\n    \"calories\": 600,\n    \"weight\": 500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /food2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"kcalFood2\", value);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"foodname\": \"Kcal Food2\",\n    \"calories\": 350,\n    \"weight\": 1500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Log In Admin baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let adminTokenValue = pm.response.headers.get(\"admintoken\");",
									"let adminIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"AdminToken\", adminTokenValue);",
									"pm.environment.set(\"adminID\", adminIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline Admin\",\n\"password\": \"basePassword Admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ALL Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that the response contains three users\", function () {",
									"  // Parse the response JSON",
									"  const responseJson = pm.response.json();",
									"",
									"  // Check if the response is an array",
									"  pm.expect(responseJson).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "admintoken",
								"value": "{{AdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/admins/{{adminID}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								"{{adminID}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ALL Food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that the response contains two food\", function () {",
									"  // Parse the response JSON",
									"  const responseJson = pm.response.json();",
									"",
									"  // Check if the response is an array",
									"  pm.expect(responseJson).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "admintoken",
								"value": "{{AdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/admins/{{adminID}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								"{{adminID}}",
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ALL People",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that the response contains two people\", function () {",
									"  // Parse the response JSON",
									"  const responseJson = pm.response.json();",
									"",
									"  // Check if the response is an array",
									"  pm.expect(responseJson).to.be.an(\"array\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "admintoken",
								"value": "{{AdminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/admins/{{adminID}}/people",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								"{{adminID}}",
								"people"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log In baseCase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userTokenValue = pm.response.headers.get(\"usertoken\");",
									"let userIdValue = pm.response.headers.get(\"userid\");",
									"",
									"pm.environment.set(\"UserToken\", userTokenValue);",
									"pm.environment.set(\"userID\", userIdValue);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"username\": \"Baseline User\",\n\"password\": \"basePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/ person1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{kcalPers1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{kcalPers1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/ person2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/people/{{kcalPers2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"people",
								"{{kcalPers2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /food1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{kcalFood1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{kcalFood1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /food2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Asserting that the entity retrieved have the right user ID.",
									"pm.test(\"Correct user ID.\", function () {",
									"    const userId = pm.environment.get(\"userId\")",
									"    pm.expect(responseBody._userid).to.eql(userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "usertoken",
								"value": "{{UserToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v1/profiles/{{userID}}/food/{{kcalFood2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{userID}}",
								"food",
								"{{kcalFood2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/profiles/{{createduserID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"profiles",
								"{{createduserID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);",
									"value = bodyData._id;",
									"pm.environment.set(\"createdAdminID\", value);",
									"",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all the necessary attributes\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"username\");",
									"    pm.expect(jsonData).to.have.property(\"password\");",
									"    pm.expect(jsonData).to.have.property(\"email\");",
									"    pm.expect(jsonData).to.have.property(\"isAdmin\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Test Admin\",\n    \"password\": \"testPassword\",\n    \"email\": \"test@email.com\",\n    \"secretKey\": \"Alpha1900\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/admins/",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admin by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/admins/{{createdAdminID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								"{{createdAdminID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Test Admin updated\",\n    \"password\": \"testPassword updated\",\n    \"email\": \"testupdated@email.com\"\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v1/admins/{{createdAdminID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								"{{createdAdminID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/v1/admins/{{createdAdminID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"admins",
								"{{createdAdminID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET /api",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api",
					"host": [
						"{{host}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}